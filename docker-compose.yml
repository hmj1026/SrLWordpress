version: '3.8'

services:
  nginx:
    image: nginx:1.25-alpine
    container_name: wp_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/certs:/etc/nginx/certs
      - ./wp:/var/www/html
    environment:
      - PROJECT_NAME=${PROJECT_NAME}
      - NGINX_HOST=${NGINX_HOST}
      - ENV_TYPE=${ENV_TYPE:-dev}
    command: >
      /bin/sh -c "nginx -g 'daemon off;'"
    depends_on:
      - wordpress
    networks:
      - wp_network

  mariadb:
    image: mariadb:latest
    container_name: wp_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "9001:3306"
    volumes:
      - ./db_data:/var/lib/mysql
    networks:
      - wp_network

  wordpress:
    build: ./docker/wp
    container_name: wp_app
    restart: always
    environment:
      WORDPRESS_DB_HOST: mariadb
      WORDPRESS_DB_NAME: ${MYSQL_DATABASE}
      WORDPRESS_DB_USER: ${MYSQL_USER}
      WORDPRESS_DB_PASSWORD: ${MYSQL_PASSWORD}
      WORDPRESS_CONFIG_EXTRA: |
        define('WP_REDIS_HOST', 'redis');
        define('WP_CACHE', true);
    volumes:
      - ./wp:/var/www/html
    depends_on:
      - mariadb
    networks:
      - wp_network

  redis:
    image: redis:latest
    container_name: wp_redis
    restart: always
    ports:
      - "9002:6379"
    networks:
      - wp_network

networks:
  wp_network:
    driver: bridge
